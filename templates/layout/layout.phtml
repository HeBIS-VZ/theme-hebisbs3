<?= $this->doctype('HTML5') ?>

<html lang="<?= $this->layout()->userLang ?>">
<head>
    <?$this->headThemeResources()?>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
    <meta name="viewport" content="width=device-width,initial-scale=1.0"/>
    <?=$this->headMeta()?>
    <?=$this->headTitle()?>
    <style media="screen" type="text/css">
        @font-face {
            font-family: 'vufind-hds';
            src: url('<?= $this->basePath() ?>/themes/hebisbs3/font/vufind-hds.eot?45523202');
            src: url('<?= $this->basePath() ?>/themes/hebisbs3/font/vufind-hds.eot?45523202#iefix') format('embedded-opentype'),
            url('<?= $this->basePath() ?>/themes/hebisbs3/font/vufind-hds.woff2?45523202') format('woff2'),
            url('<?= $this->basePath() ?>/themes/hebisbs3/font/vufind-hds.woff?45523202') format('woff'),
            url('<?= $this->basePath() ?>/themes/hebisbs3/font/vufind-hds.ttf?45523202') format('truetype'),
            url('<?= $this->basePath() ?>/themes/hebisbs3/font/vufind-hds.svg?45523202#vufind-hds') format('svg');
            font-weight: normal;
            font-style: normal;
        }
    </style>
        <?
          // Set up OpenSearch link:
          $this->headLink(
            array(
              'href' => $this->url('search-opensearch') . '?method=describe',
              'type' => 'application/opensearchdescription+xml',
              'title' => $this->transEsc('Library Catalog Search'),
              'rel' => 'search'
            )
          );
        ?>
        <!-- RTL styling -->
        <? if ($this->layout()->rtl) {
          $this->headLink()->appendStylesheet('vendor/bootstrap-rtl.min.css');
        } ?>
        <?=$this->headLink()?>
        <?=$this->headStyle()?>
        <?
          if (!isset($this->renderingError)) {
            // Add translation strings
            $this->jsTranslations()->addStrings(
              array(
                'add_tag_success' => 'add_tag_success',
                'bulk_email_success' => 'bulk_email_success',
                'bulk_noitems_advice' => 'bulk_noitems_advice',
                'bulk_save_success' => 'bulk_save_success',
                'close' => 'close',
                'collection_empty' => 'collection_empty',
                'error_occurred' => 'An error has occurred',
                'go_to_list' => 'go_to_list',
                'libphonenumber_invalid' => 'libphonenumber_invalid',
                'libphonenumber_invalidcountry' => 'libphonenumber_invalidcountry',
                'libphonenumber_invalidregion' => 'libphonenumber_invalidregion',
                'libphonenumber_notanumber' => 'libphonenumber_notanumber',
                'libphonenumber_toolong' => 'libphonenumber_toolong',
                'libphonenumber_tooshort' => 'libphonenumber_tooshort',
                'libphonenumber_tooshortidd' => 'libphonenumber_tooshortidd',
                'loading' => 'Loading',
                'more' => 'more',
                'number_thousands_separator' => [
                    'number_thousands_separator', null, ','
                ],
                'sms_success' => 'sms_success'
              )
            );
            // Add libphonenumber.js strings
            $this->jsTranslations()->addStrings(
              array(
                "Phone number invalid" => 'libphonenumber_invalid',
                "Invalid country calling code" => 'libphonenumber_invalidcountry',
                "Invalid region code" => 'libphonenumber_invalidregion',
                "The string supplied did not seem to be a phone number" => 'libphonenumber_notanumber',
                "The string supplied is too long to be a phone number" => 'libphonenumber_toolong',
                "The string supplied is too short to be a phone number" => 'libphonenumber_tooshort',
                "Phone number too short after IDD" => 'libphonenumber_tooshortidd'
              )
            );
            // Deal with cart stuff:
            $cart = $this->cart();
            if ($cart->isActive()) {
              $this->headScript()->appendFile("vendor/cookies.js");
              $this->headScript()->appendFile("cart.js");
              $domain = $cart->getCookieDomain();
              if (!empty($domain)) {
                $this->headScript()->appendScript(
                  'VuFind.cart.setDomain("' . $domain . '");'
                );
              }
              $cookiePath = $cart->getCookiePath();
              if (!empty($cookiePath)) {
                $this->headScript()->appendScript(
                  'VuFind.cart.setCookiePath("' . $cookiePath . '");'
                );
              }
              $this->jsTranslations()->addStrings(
                array(
                  'addBookBag' => 'Add to Book Bag',
                  'bookbagFull' => 'bookbag_full_msg',
                  'bookbagMax' => $cart->getMaxSize(),
                  'bookbagStatusFull' => 'bookbag_full',
                  'confirmDelete' => 'confirm_delete',
                  'confirmEmpty' => 'bookbag_confirm_empty',
                  'itemsAddBag' => 'items_added_to_bookbag',
                  'itemsInBag' => 'items_already_in_bookbag',
                  'removeBookBag' => 'Remove from Book Bag',
                  'viewBookBag' => 'View Book Bag'
                )
              );
            }
            $this->headScript()->appendScript(
              'var userIsLoggedIn = ' . ($this->auth()->isLoggedIn() ? 'true' : 'false') . ';
               $(function () {
                   $(\'[data-toggle="tooltip"]\').tooltip()
               });'
            );

          }

          // Session keep-alive
          if ($this->KeepAlive()) {
              $this->headScript()->appendScript('var keepAliveInterval = '
                . $this->KeepAlive());
              $this->headScript()->appendFile("keep_alive.js");
          }
        ?>
    <?
    $root = rtrim($this->url('home'), '/');
    $translations = $this->jsTranslations()->getJSON();
    $dsb = DEFAULT_SEARCH_BACKEND;
    $setupJS = <<<JS
VuFind.path = '{$root}';
VuFind.defaultSearchBackend = '{$dsb}';
VuFind.userLang = '{$this->layout()->userLang}';
VuFind.addTranslations({$translations});
JS;
    $this->headScript()->appendScript($setupJS);
    ?>
    <?=$this->headScript()?>
</head>
<body>
<? // Set up the search box -- there are three possible cases:
// 1. No search box was set; we should default to the normal box
// 2. It was set to false; we should display nothing
// 3. It is set to a custom string; we should display the provided version
// Set up default search box if no data was provided from the template;
// this covers case 1.  Cases 2 and 3 are then covered by logic below.
if (!isset($this->layout()->searchbox)) {
    $this->layout()->searchbox = $this->render('search/searchbox.phtml');
}
?>
<header role="banner" class="header hidden-print">
    <div class="container nav-bar">
        <div class="row">
            <?= $this->render('navigation.phtml'); ?>
        </div>
        <div class="row">
            <div class="navbar-header hidden-xs col-sm-3 col-md-3 col-lg-2">
                <?= $this->render('logo.phtml') ?>
            </div>
            <section class="searchbox col-xs-12 col-sm-9 col-md-9 col-lg-10" style="min-height:60px;">
                <?=$this->layout()->searchbox ?>
            </section>

        </div>

    </div>

</header>
<div id="main-content" role="main" class="main template-dir-<?= $this->templateDir ?> template-name-<?= $this->templateName ?>">
    <div class="breadcrumb-area" style="border: none;">
        <div class="container" style="border: none">
            <? if ((!isset($this->layout()->showBreadcrumbs) || $this->layout()->showBreadcrumbs == true)
                && !empty($this->layout()->breadcrumbs)
            ): ?>
                <ul class="breadcrumb hidden-print">
                    <li>
                        <a href="<?= $this->url('home') ?>"><span class="hds-icon-home"><!-- --></span></a>
                    </li>
                    <? if (is_array($this->layout()->breadcrumbs)): ?>
                        <? if (count($this->layout()->breadcrumbs) > 1): ?>
                            <?= $this->render('breadcrumbs/multi.phtml', array(
                                'parents' => $this->layout()->breadcrumbs,
                                'title' => $this->layout()->title,
                                'end' => $this->layout()->breadcrumbEnd,
                                'from' => $this->layout()->from
                            )) ?>
                        <? else: ?>
                            <?= $this->render('breadcrumbs/default.phtml', array(
                                'parents' => $this->layout()->breadcrumbs,
                                'title' => $this->layout()->title
                            )) ?>
                        <? endif; ?>
                    <? else: ?>
                        <?= $this->layout()->breadcrumbs ?>
                    <? endif; ?>
                </ul>
            <? endif; ?>
        </div>
    </div>
    <div class="container">
        <?
        if (isset($this->results)) : // it is a search request?
            $this->searchIndex = $this->params->getSearchHandler();
            $this->searchType = $this->params->getSearchType();
            $this->searchId = $this->results->getSearchId();
            $this->searchClassId = $this->params->getSearchClassId();
            if (isset($this->overrideTitle)) {
                $this->headTitle($this->overrideTitle);
            } else {
                $this->headTitle($this->translate('Search Results') . (empty($lookfor) ? '' : " - {$lookfor}"));
            }

        endif;
        if (isset($lookfor)) :
            // Set up breadcrumbs:
            if (isset($this->overrideTitle)) {
                $this->layout()->breadcrumbs .= '<li class="active">' . $this->escapeHtml($this->overrideTitle) . '</li>';
            } else {
                $this->layout()->breadcrumbs .= '<li class="active">' . $this->transEsc('Search') . ': ' . $this->escapeHtml($this->lookfor) . '</li>';
            }
        endif;
        ?>
            <section class="content">
                <?= $this->layout()->content ?>
            </section>

        </div>
</div>
<footer role="contentinfo" class="hidden-print">
    <div class="container">
        <?= $this->render('footer.phtml') ?>
        <?= $this->render('poweredby.phtml') ?>
        <div id="height-offset-workaround"><!-- --></div>
    </div>
</footer>
<!-- MODAL IN CASE WE NEED ONE -->
<div id="modal" class="modal fade hidden-print" tabindex="-1" role="dialog" aria-labelledby="modalTitle"
     aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 id="modalTitle" class="modal-title"></h4>
            </div>
            <div class="modal-body"><?= $this->transEsc('Loading') ?>...</div>
        </div>
    </div>
</div>
<?= $this->googleanalytics() ?>
<?= $this->piwik() ?>
</body>
</html>
